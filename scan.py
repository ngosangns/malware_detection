import os
import sys
import data
import glob
import pickle
import numpy as np
import pandas as pd
from tkinter import filedialog, Tk
from tensorflow.keras.models import load_model

# input command: 0: scan folder, 1: scan file
if __name__ == '__main__':
    # create Tk object
    root = Tk()
    root.withdraw()
    model = load_model(glob.glob("trained/*.h5")[-1])
    if int(sys.argv[1]) == 0:
        scan_path = filedialog.askdirectory(initialdir = "C:\\", title="choose folderfor scanning")
    elif int(sys.argv[1]) == 1:
        scan_path = filedialog.askopenfilename(initialdir = "C:\\", title="choose file for scanning")
    if len(scan_path) == 0:
        print("you haven't choosen path for scanning, the program will stop")
        exit()
    # extract data from the folder have choosen
    print("scanning: ", scan_path)
    data_scan = np.array(data.create_data(scan_path))
    if data_scan.shape[0] == 1:
        print("not found PE file. the program will stop")
        exit()
    m = data_scan[1:].shape[0]
    n = data_scan[1:].shape[1]
    # convert list to dataframe
    data_scan = pd.DataFrame(np.array(data_scan[1:]).reshape(m,n), columns = data_scan[0])
    X_scan_file_name = np.asarray(data_scan['FilePath'].values)
    X_scan_data = np.asarray(data_scan.drop(['FilePath', 'legitimate'], axis=1).values)
    n = X_scan_data.shape[1]
    with open("trained/max_min_data.lis", "rb") as max_min_import:
        max_min_data = pickle.load(max_min_import) # (0: max, 1: min)
        for i in range(n):
            X_scan_data[:, i] = (np.array(list(map(float, X_scan_data[:, i])))-float(max_min_data[i][1]))/(float(max_min_data[i][0])-float(max_min_data[i][1]))
    X_scan_data = X_scan_data.reshape(m, n, 1)
    # run deep learning classification to predict y
    y_scan = np.array(model.predict(X_scan_data))
    print()
    # print malicious data
    mali_results = [X_scan_file_name[i] for i in range(m) if y_scan[i, 0] == 1]
    for keyy in mali_results:
        print('-> malicious file path:', keyy)
    print()
    print('malicious files is detected:', str(len(mali_results))+'/'+str(m), 'pe file(s)')